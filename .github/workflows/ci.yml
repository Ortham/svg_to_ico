name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5

      - name: Check formatting
        run: cargo fmt --all -- --check

  cargo-vet:
    runs-on: ubuntu-24.04

    env:
      CARGO_VET_REV: c178261c96c9f820f67817e9c5458db655ddc21f # 0.10.1

    steps:
    - uses: actions/checkout@v5

    - uses: actions/cache@v4
      with:
        path: ${{ runner.tool_cache }}/cargo-vet
        key: cargo-vet-bin-${{ env.CARGO_VET_REV }}

    - name: Add the tool cache directory to the search path
      run: echo "${{ runner.tool_cache }}/cargo-vet/bin" >> $GITHUB_PATH

    - name: Ensure that the tool cache is populated with the cargo-vet binary
      run: cargo install --root ${{ runner.tool_cache }}/cargo-vet --locked --git https://github.com/mozilla/cargo-vet --rev ${{ env.CARGO_VET_REV }} cargo-vet
      if: steps.cache-cargo-vet.outputs.cache-hit != 'true'

    - name: Invoke cargo-vet
      run: |
        cargo vet --version
        cargo vet --locked

  test:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - windows-2025

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build & test
        run: cargo test
