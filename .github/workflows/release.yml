name: Release

on:
  push:
    tags: '*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create_release:
    runs-on: ubuntu-24.04

    steps:
      - name: Create a draft GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TAG="${{ github.ref_name }}"
          RELEASE_TITLE="svg_to_ico $RELEASE_TAG"
          RELEASE_NOTES="The \`.7z\` archive contains a Windows binary and the \`.tar.xz\` archive contains a Linux binary statically linked against musl for increased portability."

          gh release create --draft --title "$RELEASE_TITLE" --notes "$RELEASE_NOTES" --verify-tag --repo "${{ github.repository }}" "$RELEASE_TAG"

  windows:
    runs-on: windows-2025
    needs: create_release
    steps:
      - uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release

      - name: Package
        run: 7z a svg_to_ico.7z .\target\release\svg_to_ico.exe README.md

      - name: Upload archive to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload --repo "${{ github.repository }}" "${{ github.ref_name }}" svg_to_ico.7z

  linux:
    runs-on: ubuntu-24.04
    needs: create_release
    steps:
      - uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Linux musl target
        run: rustup target add x86_64-unknown-linux-musl

      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-musl

      - name: Test
        run: cargo test --release --target x86_64-unknown-linux-musl

      - name: Package
        run: tar -cJf svg_to_ico.tar.xz README.md -C target/x86_64-unknown-linux-musl/release svg_to_ico

      - name: Upload archive to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload --repo "${{ github.repository }}" "${{ github.ref_name }}" svg_to_ico.tar.xz

  publish:
    runs-on: ubuntu-24.04

    environment: release

    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v5

      - uses: rust-lang/crates-io-auth-action@e919bc7605cde86df457cf5b93c5e103838bd879 # v1.0.1
        id: auth

      - run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ steps.auth.outputs.token }}
